import streamlit as st
import numpy as np
import matplotlib.pyplot as plt
import math

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
st.set_page_config(page_title="–ú–µ—Ç–æ–¥ –ø—Ä–æ—Å—Ç–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏", layout="wide")
st.title("üìà –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –º–µ—Ç–æ–¥–∞ –ø—Ä–æ—Å—Ç–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏")

# –ë–æ–∫–æ–≤–∞—è –ø–∞–Ω–µ–ª—å –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
with st.sidebar:
    st.header("–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —Ä–µ—à–µ–Ω–∏—è")
    g_str = st.text_input("–§—É–Ω–∫—Ü–∏—è g(x)", "2 - math.cos(x)")
    st.caption("–ü—Ä–∏–º–µ—Ä—ã: '2 - math.cos(x)', '(x + 2/x)/2', 'math.sqrt(2)'")
    
    x0 = st.number_input("–ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ x0", value=2.98, step=0.1)
    epsilon = st.number_input("–¢–æ—á–Ω–æ—Å—Ç—å (epsilon)", value=1e-6, format="%.6f")
    max_iter = st.slider("–ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏—Ç–µ—Ä–∞—Ü–∏–π", 10, 1000, 100)
    
    st.markdown("---")
    st.info("""
    **–í–∞–∂–Ω–æ!** 
    - –ü—Ä–µ–æ–±—Ä–∞–∑—É–π—Ç–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ f(x)=0 –≤ –≤–∏–¥ x = g(x)
    - –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ math. –¥–ª—è –º–∞—Ç–µ–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö —Ñ—É–Ω–∫—Ü–∏–π
    - –î–ª—è –∫–æ—Ä–Ω—è x¬≤=2 –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ g(x)=(x+2/x)/2
    """)

# –ö–Ω–æ–ø–∫–∞ –∑–∞–ø—É—Å–∫–∞
if st.sidebar.button("–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"):
    try:
        # –°–æ–∑–¥–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é g(x) –∏–∑ —Å—Ç—Ä–æ–∫–∏
        g = lambda x: eval(g_str, {"math": math, "np": np}, {"x": x})
        
        # –ü–æ–¥–≥–æ—Ç–æ–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –≥—Ä–∞—Ñ–∏–∫–∞
        # –î–∏–∞–ø–∞–∑–æ–Ω: x0 ¬± 3, –Ω–æ —Å —É–º–Ω—ã–º —Å–º–µ—â–µ–Ω–∏–µ–º
        x_min = max(0, x0 - 3)
        x_max = x0 + 3
        x_vals = np.linspace(x_min, x_max, 1000)
        y_g = [g(x) for x in x_vals]
        y_x = x_vals  # –ø—Ä—è–º–∞—è y = x
        
        # –í—ã—á–∏—Å–ª–µ–Ω–∏–µ –∏—Ç–µ—Ä–∞—Ü–∏–π
        x_prev = x0
        iterations = [x0]
        for i in range(max_iter):
            x_next = g(x_prev)
            iterations.append(x_next)
            if abs(x_next - x_prev) < epsilon:
                break
            x_prev = x_next
        
        # –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
        fig, ax = plt.subplots(figsize=(10, 6))
        
        # –ì—Ä–∞—Ñ–∏–∫ g(x) –∏ y=x
        ax.plot(x_vals, y_g, label='y = g(x)', color='#1f77b4', linewidth=2)
        ax.plot(x_vals, y_x, label='y = x', color='#ff7f0e', linestyle='--', linewidth=2)
        
        # –õ–µ—Å—Ç–Ω–∏—á–Ω–∞—è –¥–∏–∞–≥—Ä–∞–º–º–∞ (–∏—Ç–µ—Ä–∞—Ü–∏–∏)
        for i in range(len(iterations)-1):
            # –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π –æ—Ç—Ä–µ–∑–æ–∫ (x_n -> x_{n+1} –Ω–∞ y=x)
            ax.plot([iterations[i], iterations[i+1]], [iterations[i], iterations[i]], 
                    color='#2ca02c', alpha=0.8, linewidth=1.5)
            # –í–µ—Ä—Ç–∏–∫–∞–ª—å–Ω—ã–π –æ—Ç—Ä–µ–∑–æ–∫ (x_{n+1} -> y=g(x_{n+1}))
            ax.plot([iterations[i+1], iterations[i+1]], [iterations[i], iterations[i+1]], 
                    color='#2ca02c', alpha=0.8, linewidth=1.5)
        
        # –¢–æ—á–∫–∏ –∏—Ç–µ—Ä–∞—Ü–∏–π
        ax.scatter(iterations, iterations, color='#d62728', s=50, zorder=5)
        
        # –ü–æ–¥–ø–∏—Å–∏
        ax.set_xlabel('x', fontsize=12)
        ax.set_ylabel('y', fontsize=12)
        ax.set_title('–ü—Ä–æ—Ü–µ—Å—Å —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏ –º–µ—Ç–æ–¥–∞ –ø—Ä–æ—Å—Ç–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏', fontsize=14)
        ax.legend(fontsize=10)
        ax.grid(True, linestyle='--', alpha=0.7)
        ax.axhline(y=0, color='k', linestyle='-', alpha=0.1)
        ax.axvline(x=0, color='k', linestyle='-', alpha=0.1)
        
        # –û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ –≥—Ä–∞—Ñ–∏–∫–∞
        st.pyplot(fig)
        
        # –í—ã–≤–æ–¥ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤
        st.subheader("‚úÖ –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤—ã—á–∏—Å–ª–µ–Ω–∏–π")
        col1, col2 = st.columns(2)
        
        with col1:
            st.metric("–ö–æ—Ä–µ–Ω—å —É—Ä–∞–≤–Ω–µ–Ω–∏—è", f"{iterations[-1]:.8f}")
            st.metric("–ß–∏—Å–ª–æ –∏—Ç–µ—Ä–∞—Ü–∏–π", len(iterations)-1)
            st.metric("–¢–æ—á–Ω–æ—Å—Ç—å", f"{abs(iterations[-1] - iterations[-2]):.2e}")
        
        with col2:
            st.metric("–ü—Ä–æ–≤–µ—Ä–∫–∞ g(x)", f"{g(iterations[-1]):.8f}")
            st.metric("–†–∞–∑–Ω–∏—Ü–∞ |x - g(x)|", f"{abs(iterations[-1] - g(iterations[-1])):.2e}")
            st.metric("–°—Ö–æ–¥–∏–º–æ—Å—Ç—å", "‚úÖ –°—Ö–æ–¥–∏—Ç—Å—è" if len(iterations) < max_iter else "‚ö†Ô∏è –î–æ—Å—Ç–∏–≥–Ω—É—Ç–æ max_iter")
        
        # –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è
        st.markdown("### üìù –ö–∞–∫ —á–∏—Ç–∞—Ç—å –≥—Ä–∞—Ñ–∏–∫:")
        st.markdown("""
        - **–°–∏–Ω—è—è –ª–∏–Ω–∏—è**: –≥—Ä–∞—Ñ–∏–∫ —Ñ—É–Ω–∫—Ü–∏–∏ y = g(x)
        - **–û—Ä–∞–Ω–∂–µ–≤–∞—è –ø—É–Ω–∫—Ç–∏—Ä–Ω–∞—è –ª–∏–Ω–∏—è**: –ø—Ä—è–º–∞—è y = x
        - **–ó–µ–ª—ë–Ω—ã–µ –ª–∏–Ω–∏–∏**: —à–∞–≥–∏ –º–µ—Ç–æ–¥–∞ –∏—Ç–µ—Ä–∞—Ü–∏–∏
        - **–ö—Ä–∞—Å–Ω—ã–µ —Ç–æ—á–∫–∏**: –∑–Ω–∞—á–µ–Ω–∏—è –Ω–∞ –∫–∞–∂–¥–æ–π –∏—Ç–µ—Ä–∞—Ü–∏–∏
        """)
        
        # –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        if len(iterations) >= max_iter:
            st.warning("‚ùó –ú–µ—Ç–æ–¥ –Ω–µ —Å—Ö–æ–¥–∏—Ç—Å—è –∑–∞ –∑–∞–¥–∞–Ω–Ω–æ–µ —á–∏—Å–ª–æ –∏—Ç–µ—Ä–∞—Ü–∏–π! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ:")
            st.markdown("""
            - –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
            - –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ x = g(x)
            - –£–≤–µ–ª–∏—á–∏—Ç—å –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏—Ç–µ—Ä–∞—Ü–∏–π
            """)
            
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø—Ä–æ–∏–∑–≤–æ–¥–Ω–æ–π –¥–ª—è —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏
        try:
            h = 1e-5
            x_check = iterations[-1]
            deriv = (g(x_check + h) - g(x_check - h)) / (2 * h)
            if abs(deriv) >= 1:
                st.error(f"‚ö†Ô∏è –í–Ω–∏–º–∞–Ω–∏–µ: |g'(x)| = {abs(deriv):.4f} ‚â• 1 –≤ —Ç–æ—á–∫–µ –∫–æ—Ä–Ω—è. –ú–µ—Ç–æ–¥ –º–æ–∂–µ—Ç –Ω–µ —Å—Ö–æ–¥–∏—Ç—å—Å—è!")
            else:
                st.success(f"‚úÖ –£—Å–ª–æ–≤–∏–µ —Å—Ö–æ–¥–∏–º–æ—Å—Ç–∏: |g'(x)| = {abs(deriv):.4f} < 1")
        except:
            pass
            
    except Exception as e:
        st.error(f"‚ùå –û—à–∏–±–∫–∞ –≤ –≤—ã—á–∏—Å–ª–µ–Ω–∏—è—Ö: {str(e)}")
        st.markdown("""
        **–ü—Ä–æ–≤–µ—Ä—å—Ç–µ:**
        - –ö–æ—Ä—Ä–µ–∫—Ç–Ω–æ—Å—Ç—å —Ñ—É–Ω–∫—Ü–∏–∏ g(x)
        - –ù–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
        - –û–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è —Ñ—É–Ω–∫—Ü–∏–∏ (–Ω–∞–ø—Ä–∏–º–µ—Ä, arccos –æ—Ç —á–∏—Å–ª–∞ >1)
        """)
        st.code("""
        –ü—Ä–∏–º–µ—Ä—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π:
        - –î–ª—è x + cos(x) = 2: 2 - math.cos(x)
        - –î–ª—è x¬≤ - 2 = 0: (x + 2/x)/2
        - –î–ª—è x¬≥ - x - 1 = 0: (x + 1)**(1/3)
        """)

# –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
st.markdown("""
---
### üìö –ö–∞–∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å —ç—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ:
1. –í –ø–æ–ª–µ **"–§—É–Ω–∫—Ü–∏—è g(x)"** –≤–≤–µ–¥–∏—Ç–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–Ω–æ–µ —É—Ä–∞–≤–Ω–µ–Ω–∏–µ –≤ –≤–∏–¥–µ x = g(x)
2. –ó–∞–¥–∞–π—Ç–µ **–Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ x0**
3. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ **—Ç–æ—á–Ω–æ—Å—Ç—å** –∏ **–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ —á–∏—Å–ª–æ –∏—Ç–µ—Ä–∞—Ü–∏–π**
4. –ù–∞–∂–º–∏—Ç–µ **"–†–∞—Å—Å—á–∏—Ç–∞—Ç—å"**
5. –ù–∞–±–ª—é–¥–∞–π—Ç–µ –∑–∞ –≥—Ä–∞—Ñ–∏–∫–æ–º –∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏!

> üí° **–°–æ–≤–µ—Ç**: –ï—Å–ª–∏ –º–µ—Ç–æ–¥ –Ω–µ —Å—Ö–æ–¥–∏—Ç—Å—è, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ:
> - –ò–∑–º–µ–Ω–∏—Ç—å –Ω–∞—á–∞–ª—å–Ω–æ–µ –ø—Ä–∏–±–ª–∏–∂–µ–Ω–∏–µ
> - –í—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥–æ–µ –ø—Ä–µ–æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ —É—Ä–∞–≤–Ω–µ–Ω–∏—è
> - –£–≤–µ–ª–∏—á–∏—Ç—å —á–∏—Å–ª–æ –∏—Ç–µ—Ä–∞—Ü–∏–π
""")